# You would typically use `rake secret` to generate a secure token. It is
# critical that you keep this value private in production.
SECRET_KEY_BASE=a4ab233ba4d8d6e8781441982b0b70ad816e4e24a6d47c3cf3db1bfabf7c4efcc8530f926552624eceff88392b87e061166d36aef5e2b29b90ef962f6dd06b94

# Unicorn is more than capable of spawning multiple workers, and in production
# you would want to increase this value but in development you should keep it
# set to 1.
#
# It becomes difficult to properly debug code if there's multiple copies of
# your application running via workers and/or threads.
WORKER_PROCESSES=1


# This will be the address and port that Unicorn binds to
LISTEN_ON=0.0.0.0:3000


# This is how we'll connect to PostgreSQL. It's good practice to keep the
# username lined up with your application's name but it's not necessary.
#
# Since we're dealing with development mode, it's ok to have a weak password
# such as `yourpassword` but in production you'll definitely want a better one.
#
# Eventually we'll be running everything in Docker containers, and you can set
# the host to be equal to `postgres` thanks to how Docker allows you to link
# containers.
#
# Everything else is standard Rails configuration for a PostgreSQL database.
DATABASE_URL=postgresql://touhou:hunter2@postgres:5432/touhou?encoding=utf8&pool=5&timeout=5000

RAILS_ENV=production

# Need this since we aren't using
RAILS_SERVE_STATIC_FILES